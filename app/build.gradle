/*
 *
 * This file is part of Ubuntu touch icon pack.
 *
 * Ubuntu touch icon pack is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Ubuntu touch icon pack is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Ubuntu touch icon pack.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

android {
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "UbuntuTouchIconPack-v${variant.versionName}-${variant.name}.apk"
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds true
        disable 'MissingTranslation', 'GoogleAppIndexingWarning'
    }

    compileSdkVersion Versions.targetSdk
    buildToolsVersion Versions.buildTools

    defaultConfig {
        applicationId MyApp.appId
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode MyApp.version
        versionName MyApp.versionName
        vectorDrawables.useSupportLibrary = true
        proguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'
        consumerProguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'
            consumerProguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        pickFirst 'META-INF/core_debug.kotlin_module'
        pickFirst 'META-INF/core_release.kotlin_module'
        pickFirst 'META-INF/library_debug.kotlin_module'
        pickFirst 'META-INF/library_release.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation(Libs.blueprint) {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-core:17.4.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.6'
}
